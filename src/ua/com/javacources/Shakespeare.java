
package ua.com.javacources;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This Web Service takes a phrase from the plays of William Shakespeare and returns the associated speech, speaker, and play. The Shakespeare texts used in this Web Service are the XML versions developed by Jon Bosak.  Go to http://www.oasis-open.org/cover/bosakShakespeare200.html for more information on the texts. See http://www.xmlme.com for a sample client and additional details about the Shakespeare Web Service.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Shakespeare", targetNamespace = "http://xmlme.com/WebServices", wsdlLocation = "http://xmlme.com/WSshakespeare.asmx?wsdl")
public class Shakespeare
    extends Service
{

    private final static URL SHAKESPEARE_WSDL_LOCATION;
    private final static WebServiceException SHAKESPEARE_EXCEPTION;
    private final static QName SHAKESPEARE_QNAME = new QName("http://xmlme.com/WebServices", "Shakespeare");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://xmlme.com/WSshakespeare.asmx?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SHAKESPEARE_WSDL_LOCATION = url;
        SHAKESPEARE_EXCEPTION = e;
    }

    public Shakespeare() {
        super(__getWsdlLocation(), SHAKESPEARE_QNAME);
    }

    public Shakespeare(WebServiceFeature... features) {
        super(__getWsdlLocation(), SHAKESPEARE_QNAME, features);
    }

    public Shakespeare(URL wsdlLocation) {
        super(wsdlLocation, SHAKESPEARE_QNAME);
    }

    public Shakespeare(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SHAKESPEARE_QNAME, features);
    }

    public Shakespeare(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Shakespeare(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ShakespeareSoap
     */
    @WebEndpoint(name = "ShakespeareSoap")
    public ShakespeareSoap getShakespeareSoap() {
        return super.getPort(new QName("http://xmlme.com/WebServices", "ShakespeareSoap"), ShakespeareSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ShakespeareSoap
     */
    @WebEndpoint(name = "ShakespeareSoap")
    public ShakespeareSoap getShakespeareSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlme.com/WebServices", "ShakespeareSoap"), ShakespeareSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns ShakespeareSoap
     */
    @WebEndpoint(name = "ShakespeareSoap12")
    public ShakespeareSoap getShakespeareSoap12() {
        return super.getPort(new QName("http://xmlme.com/WebServices", "ShakespeareSoap12"), ShakespeareSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ShakespeareSoap
     */
    @WebEndpoint(name = "ShakespeareSoap12")
    public ShakespeareSoap getShakespeareSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlme.com/WebServices", "ShakespeareSoap12"), ShakespeareSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SHAKESPEARE_EXCEPTION!= null) {
            throw SHAKESPEARE_EXCEPTION;
        }
        return SHAKESPEARE_WSDL_LOCATION;
    }

}
